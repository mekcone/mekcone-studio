package com.mekcone.incrud.core.controller;

import com.mekcone.incrud.core.controller.generators.backend.*;
import com.mekcone.incrud.core.controller.generators.frontend.admin.*;

import java.io.*;
import java.nio.file.Files;
import java.util.Date;

public class ProjectBuilder {
    private String projectUrl;
    private String backendSourceBaseUrl;
    private String frontendSourceBaseUrl;


    @Override
    public String toString() {
        return ProjectLoader.project.toString();
    }


    public static String getDescription() {
        Date date = new Date();
        return "Auto-generated by MekCone InCRUD at " + date;
    }


    public void buildSpringBootProject() {
        FileManager.checkDirectory(backendSourceBaseUrl + "/com/mekcone/incrud/core/model");
        FileManager.checkDirectory(backendSourceBaseUrl + "/mapper");
        FileManager.checkDirectory(backendSourceBaseUrl + "/com/mekcone/incrud/core/controller");
        FileManager.checkDirectory(backendSourceBaseUrl + "/config");
        FileManager.checkDirectory(backendSourceBaseUrl + "/service/impl");
        FileManager.checkDirectory(projectUrl + "/" + ProjectLoader.project.getArtifactId().getData() + "-backend" + "/src/main/resources");

        new ModelGenerator(ProjectLoader.project, backendSourceBaseUrl + "/com/mekcone/incrud/core/model");
        new MapperGenerator(ProjectLoader.project, backendSourceBaseUrl + "/mapper");
        new SqlQueryGenerator(ProjectLoader.project, this.projectUrl + "/" + ProjectLoader.project.getArtifactId().getData() + "-backend");
        new ControllerGenerator(ProjectLoader.project, backendSourceBaseUrl + "/com/mekcone/incrud/core/controller");
        new PomGenerator(ProjectLoader.project, this.projectUrl + "/" + ProjectLoader.project.getArtifactId().getData() + "-backend");
        new ApplicationEntryGenerator(ProjectLoader.project, backendSourceBaseUrl);
        new ApplicationPropertiesGenerator(ProjectLoader.project, this.projectUrl + "/" + ProjectLoader.project.getArtifactId().getData() + "-backend" + "/src/main/resources");
        new ServiceGenerator(ProjectLoader.project, backendSourceBaseUrl + "/service");
        new ServiceImplGenerator(ProjectLoader.project, backendSourceBaseUrl + "/service/impl");
    }

    public void buildVueAdminProject() {
        FileManager.checkDirectory(frontendSourceBaseUrl + "/admin/static");

        // Copy template files
        String[] templateDirectories = {
                "/",
                "/build/",
                "/config/",
                "/src/",
                "/src/components/",
                "/src/router/"
        };

        for (String directory: templateDirectories) {
            File file = new File(System.getProperty("user.dir") + "/templates/vue" + directory);
            File[] files = file.listFiles();
            for (File f: files) {
                if (!f.getName().equals("package.json")) {
                    File outputFile = new File(frontendSourceBaseUrl + "/admin/" + directory + f.getName());
                    try {
                        if (!outputFile.exists()) {
                            Files.copy(f.toPath(), outputFile.toPath());
                        }
                    } catch (IOException e) {
                        Logger.error(e.getMessage());
                    }
                }
            }
        }

        // Generate index.html
        TemplateProccesor templateProccesor = new TemplateProccesor(System.getProperty("user.dir") + "/templates/vue/index.html");
        templateProccesor.insert("title", ProjectLoader.project.getArtifactId().capitalizedCamelStyle() + " Admin");
        FileManager.write(frontendSourceBaseUrl + "/admin/index.html", templateProccesor.toString());

        //new ApiDocumentGenerator(this.project, frontendSourceBaseUrl);
        new PackageJSONGenerator(ProjectLoader.project, frontendSourceBaseUrl + "/admin");
        new RouterJSGennerator(ProjectLoader.project, frontendSourceBaseUrl + "/admin/src/router");
        new AppVueGenrator(ProjectLoader.project, frontendSourceBaseUrl + "/admin/src/App.vue");
        new PanelVueGenerator(ProjectLoader.project, frontendSourceBaseUrl + "/admin/src/components/Panel.vue");
        new DataTablesVueGenerator(ProjectLoader.project, frontendSourceBaseUrl + "/admin/src/components");
    }
}
